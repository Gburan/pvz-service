version: "3.9"

services:

  prometheus:
    image: prom/prometheus:v3.4.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - "./metrics/prometheus:/etc/prometheus"
    networks:
      - app_network

  grafana:
    image: grafana/grafana:12.0.1
    container_name: grafana
    links:
      - prometheus:prometheus
    ports:
      - "3030:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - app_network

  pvz-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pvz-service_app_container
    environment:
      - POSTGRES_CONN=postgres://postgres:postgres@pvz-service-db:5432/pvz-service
    restart: unless-stopped
    depends_on:
      pvz-service-db:
        condition: service_healthy
    volumes:
      - ./logs:/var/log/myapp
    networks:
      - app_network
    ports:
      - "8080:8080"
      - "3000:3000"

  pvz-service-db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=pvz-service
      - POSTGRES_HOST_AUTH_METHOD=md5
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d pvz-service" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app_network
    expose:
      - "5432"

networks:
  app_network:
    name: app_network
